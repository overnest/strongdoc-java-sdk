// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: documentNoStore.proto

package com.strongsalt.strongdoc.sdk.proto;

public final class DocumentsNoStore {
  private DocumentsNoStore() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EncryptDocStreamReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.EncryptDocStreamReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The docName.
     */
    java.lang.String getDocName();
    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The bytes for docName.
     */
    com.google.protobuf.ByteString
        getDocNameBytes();

    /**
     * <pre>
     * The data of the document to encrypt.
     * </pre>
     *
     * <code>bytes plaintext = 2;</code>
     * @return The plaintext.
     */
    com.google.protobuf.ByteString getPlaintext();

    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.NameOrDataCase getNameOrDataCase();
  }
  /**
   * Protobuf type {@code proto.EncryptDocStreamReq}
   */
  public  static final class EncryptDocStreamReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.EncryptDocStreamReq)
      EncryptDocStreamReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptDocStreamReq.newBuilder() to construct.
    private EncryptDocStreamReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptDocStreamReq() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptDocStreamReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptDocStreamReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              nameOrDataCase_ = 1;
              nameOrData_ = s;
              break;
            }
            case 18: {
              nameOrDataCase_ = 2;
              nameOrData_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.Builder.class);
    }

    private int nameOrDataCase_ = 0;
    private java.lang.Object nameOrData_;
    public enum NameOrDataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DOCNAME(1),
      PLAINTEXT(2),
      NAMEORDATA_NOT_SET(0);
      private final int value;
      private NameOrDataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NameOrDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static NameOrDataCase forNumber(int value) {
        switch (value) {
          case 1: return DOCNAME;
          case 2: return PLAINTEXT;
          case 0: return NAMEORDATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public NameOrDataCase
    getNameOrDataCase() {
      return NameOrDataCase.forNumber(
          nameOrDataCase_);
    }

    public static final int DOCNAME_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The docName.
     */
    public java.lang.String getDocName() {
      java.lang.Object ref = "";
      if (nameOrDataCase_ == 1) {
        ref = nameOrData_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (nameOrDataCase_ == 1) {
          nameOrData_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The bytes for docName.
     */
    public com.google.protobuf.ByteString
        getDocNameBytes() {
      java.lang.Object ref = "";
      if (nameOrDataCase_ == 1) {
        ref = nameOrData_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (nameOrDataCase_ == 1) {
          nameOrData_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAINTEXT_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The data of the document to encrypt.
     * </pre>
     *
     * <code>bytes plaintext = 2;</code>
     * @return The plaintext.
     */
    public com.google.protobuf.ByteString getPlaintext() {
      if (nameOrDataCase_ == 2) {
        return (com.google.protobuf.ByteString) nameOrData_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nameOrDataCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nameOrData_);
      }
      if (nameOrDataCase_ == 2) {
        output.writeBytes(
            2, (com.google.protobuf.ByteString) nameOrData_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nameOrDataCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nameOrData_);
      }
      if (nameOrDataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              2, (com.google.protobuf.ByteString) nameOrData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq) obj;

      if (!getNameOrDataCase().equals(other.getNameOrDataCase())) return false;
      switch (nameOrDataCase_) {
        case 1:
          if (!getDocName()
              .equals(other.getDocName())) return false;
          break;
        case 2:
          if (!getPlaintext()
              .equals(other.getPlaintext())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (nameOrDataCase_) {
        case 1:
          hash = (37 * hash) + DOCNAME_FIELD_NUMBER;
          hash = (53 * hash) + getDocName().hashCode();
          break;
        case 2:
          hash = (37 * hash) + PLAINTEXT_FIELD_NUMBER;
          hash = (53 * hash) + getPlaintext().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.EncryptDocStreamReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.EncryptDocStreamReq)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nameOrDataCase_ = 0;
        nameOrData_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamReq_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq(this);
        if (nameOrDataCase_ == 1) {
          result.nameOrData_ = nameOrData_;
        }
        if (nameOrDataCase_ == 2) {
          result.nameOrData_ = nameOrData_;
        }
        result.nameOrDataCase_ = nameOrDataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq.getDefaultInstance()) return this;
        switch (other.getNameOrDataCase()) {
          case DOCNAME: {
            nameOrDataCase_ = 1;
            nameOrData_ = other.nameOrData_;
            onChanged();
            break;
          }
          case PLAINTEXT: {
            setPlaintext(other.getPlaintext());
            break;
          }
          case NAMEORDATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int nameOrDataCase_ = 0;
      private java.lang.Object nameOrData_;
      public NameOrDataCase
          getNameOrDataCase() {
        return NameOrDataCase.forNumber(
            nameOrDataCase_);
      }

      public Builder clearNameOrData() {
        nameOrDataCase_ = 0;
        nameOrData_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @return The docName.
       */
      public java.lang.String getDocName() {
        java.lang.Object ref = "";
        if (nameOrDataCase_ == 1) {
          ref = nameOrData_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (nameOrDataCase_ == 1) {
            nameOrData_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @return The bytes for docName.
       */
      public com.google.protobuf.ByteString
          getDocNameBytes() {
        java.lang.Object ref = "";
        if (nameOrDataCase_ == 1) {
          ref = nameOrData_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (nameOrDataCase_ == 1) {
            nameOrData_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @param value The docName to set.
       * @return This builder for chaining.
       */
      public Builder setDocName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  nameOrDataCase_ = 1;
        nameOrData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocName() {
        if (nameOrDataCase_ == 1) {
          nameOrDataCase_ = 0;
          nameOrData_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @param value The bytes for docName to set.
       * @return This builder for chaining.
       */
      public Builder setDocNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        nameOrDataCase_ = 1;
        nameOrData_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>bytes plaintext = 2;</code>
       * @return The plaintext.
       */
      public com.google.protobuf.ByteString getPlaintext() {
        if (nameOrDataCase_ == 2) {
          return (com.google.protobuf.ByteString) nameOrData_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>bytes plaintext = 2;</code>
       * @param value The plaintext to set.
       * @return This builder for chaining.
       */
      public Builder setPlaintext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  nameOrDataCase_ = 2;
        nameOrData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>bytes plaintext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlaintext() {
        if (nameOrDataCase_ == 2) {
          nameOrDataCase_ = 0;
          nameOrData_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.EncryptDocStreamReq)
    }

    // @@protoc_insertion_point(class_scope:proto.EncryptDocStreamReq)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncryptDocStreamReq>
        PARSER = new com.google.protobuf.AbstractParser<EncryptDocStreamReq>() {
      @java.lang.Override
      public EncryptDocStreamReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptDocStreamReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptDocStreamReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptDocStreamReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptDocStreamRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.EncryptDocStreamResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    java.lang.String getDocID();
    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <pre>
     * The encrypted data of the document.
     * </pre>
     *
     * <code>bytes ciphertext = 2;</code>
     * @return The ciphertext.
     */
    com.google.protobuf.ByteString getCiphertext();
  }
  /**
   * Protobuf type {@code proto.EncryptDocStreamResp}
   */
  public  static final class EncryptDocStreamResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.EncryptDocStreamResp)
      EncryptDocStreamRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptDocStreamResp.newBuilder() to construct.
    private EncryptDocStreamResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptDocStreamResp() {
      docID_ = "";
      ciphertext_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptDocStreamResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptDocStreamResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docID_ = s;
              break;
            }
            case 18: {

              ciphertext_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.Builder.class);
    }

    public static final int DOCID_FIELD_NUMBER = 1;
    private volatile java.lang.Object docID_;
    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CIPHERTEXT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString ciphertext_;
    /**
     * <pre>
     * The encrypted data of the document.
     * </pre>
     *
     * <code>bytes ciphertext = 2;</code>
     * @return The ciphertext.
     */
    public com.google.protobuf.ByteString getCiphertext() {
      return ciphertext_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDocIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docID_);
      }
      if (!ciphertext_.isEmpty()) {
        output.writeBytes(2, ciphertext_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDocIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docID_);
      }
      if (!ciphertext_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, ciphertext_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp) obj;

      if (!getDocID()
          .equals(other.getDocID())) return false;
      if (!getCiphertext()
          .equals(other.getCiphertext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCID_FIELD_NUMBER;
      hash = (53 * hash) + getDocID().hashCode();
      hash = (37 * hash) + CIPHERTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getCiphertext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.EncryptDocStreamResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.EncryptDocStreamResp)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docID_ = "";

        ciphertext_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocStreamResp_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp(this);
        result.docID_ = docID_;
        result.ciphertext_ = ciphertext_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp.getDefaultInstance()) return this;
        if (!other.getDocID().isEmpty()) {
          docID_ = other.docID_;
          onChanged();
        }
        if (other.getCiphertext() != com.google.protobuf.ByteString.EMPTY) {
          setCiphertext(other.getCiphertext());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docID_ = "";
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The docID.
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = docID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The bytes for docID.
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = docID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocID() {
        
        docID_ = getDefaultInstance().getDocID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The bytes for docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docID_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString ciphertext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>bytes ciphertext = 2;</code>
       * @return The ciphertext.
       */
      public com.google.protobuf.ByteString getCiphertext() {
        return ciphertext_;
      }
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>bytes ciphertext = 2;</code>
       * @param value The ciphertext to set.
       * @return This builder for chaining.
       */
      public Builder setCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ciphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>bytes ciphertext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCiphertext() {
        
        ciphertext_ = getDefaultInstance().getCiphertext();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.EncryptDocStreamResp)
    }

    // @@protoc_insertion_point(class_scope:proto.EncryptDocStreamResp)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncryptDocStreamResp>
        PARSER = new com.google.protobuf.AbstractParser<EncryptDocStreamResp>() {
      @java.lang.Override
      public EncryptDocStreamResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptDocStreamResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptDocStreamResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptDocStreamResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocStreamResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecryptDocStreamReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.DecryptDocStreamReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    java.lang.String getDocID();
    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <pre>
     * The data of the document to decrypt.
     * </pre>
     *
     * <code>bytes ciphertext = 2;</code>
     * @return The ciphertext.
     */
    com.google.protobuf.ByteString getCiphertext();

    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.IdOrDataCase getIdOrDataCase();
  }
  /**
   * Protobuf type {@code proto.DecryptDocStreamReq}
   */
  public  static final class DecryptDocStreamReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.DecryptDocStreamReq)
      DecryptDocStreamReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DecryptDocStreamReq.newBuilder() to construct.
    private DecryptDocStreamReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecryptDocStreamReq() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DecryptDocStreamReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DecryptDocStreamReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              idOrDataCase_ = 1;
              idOrData_ = s;
              break;
            }
            case 18: {
              idOrDataCase_ = 2;
              idOrData_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.Builder.class);
    }

    private int idOrDataCase_ = 0;
    private java.lang.Object idOrData_;
    public enum IdOrDataCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DOCID(1),
      CIPHERTEXT(2),
      IDORDATA_NOT_SET(0);
      private final int value;
      private IdOrDataCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static IdOrDataCase valueOf(int value) {
        return forNumber(value);
      }

      public static IdOrDataCase forNumber(int value) {
        switch (value) {
          case 1: return DOCID;
          case 2: return CIPHERTEXT;
          case 0: return IDORDATA_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public IdOrDataCase
    getIdOrDataCase() {
      return IdOrDataCase.forNumber(
          idOrDataCase_);
    }

    public static final int DOCID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = "";
      if (idOrDataCase_ == 1) {
        ref = idOrData_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (idOrDataCase_ == 1) {
          idOrData_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = "";
      if (idOrDataCase_ == 1) {
        ref = idOrData_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (idOrDataCase_ == 1) {
          idOrData_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CIPHERTEXT_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The data of the document to decrypt.
     * </pre>
     *
     * <code>bytes ciphertext = 2;</code>
     * @return The ciphertext.
     */
    public com.google.protobuf.ByteString getCiphertext() {
      if (idOrDataCase_ == 2) {
        return (com.google.protobuf.ByteString) idOrData_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (idOrDataCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, idOrData_);
      }
      if (idOrDataCase_ == 2) {
        output.writeBytes(
            2, (com.google.protobuf.ByteString) idOrData_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (idOrDataCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, idOrData_);
      }
      if (idOrDataCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              2, (com.google.protobuf.ByteString) idOrData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq) obj;

      if (!getIdOrDataCase().equals(other.getIdOrDataCase())) return false;
      switch (idOrDataCase_) {
        case 1:
          if (!getDocID()
              .equals(other.getDocID())) return false;
          break;
        case 2:
          if (!getCiphertext()
              .equals(other.getCiphertext())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (idOrDataCase_) {
        case 1:
          hash = (37 * hash) + DOCID_FIELD_NUMBER;
          hash = (53 * hash) + getDocID().hashCode();
          break;
        case 2:
          hash = (37 * hash) + CIPHERTEXT_FIELD_NUMBER;
          hash = (53 * hash) + getCiphertext().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.DecryptDocStreamReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.DecryptDocStreamReq)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        idOrDataCase_ = 0;
        idOrData_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamReq_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq(this);
        if (idOrDataCase_ == 1) {
          result.idOrData_ = idOrData_;
        }
        if (idOrDataCase_ == 2) {
          result.idOrData_ = idOrData_;
        }
        result.idOrDataCase_ = idOrDataCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq.getDefaultInstance()) return this;
        switch (other.getIdOrDataCase()) {
          case DOCID: {
            idOrDataCase_ = 1;
            idOrData_ = other.idOrData_;
            onChanged();
            break;
          }
          case CIPHERTEXT: {
            setCiphertext(other.getCiphertext());
            break;
          }
          case IDORDATA_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int idOrDataCase_ = 0;
      private java.lang.Object idOrData_;
      public IdOrDataCase
          getIdOrDataCase() {
        return IdOrDataCase.forNumber(
            idOrDataCase_);
      }

      public Builder clearIdOrData() {
        idOrDataCase_ = 0;
        idOrData_ = null;
        onChanged();
        return this;
      }


      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The docID.
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = "";
        if (idOrDataCase_ == 1) {
          ref = idOrData_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (idOrDataCase_ == 1) {
            idOrData_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The bytes for docID.
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = "";
        if (idOrDataCase_ == 1) {
          ref = idOrData_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (idOrDataCase_ == 1) {
            idOrData_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  idOrDataCase_ = 1;
        idOrData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocID() {
        if (idOrDataCase_ == 1) {
          idOrDataCase_ = 0;
          idOrData_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The bytes for docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        idOrDataCase_ = 1;
        idOrData_ = value;
        onChanged();
        return this;
      }

      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>bytes ciphertext = 2;</code>
       * @return The ciphertext.
       */
      public com.google.protobuf.ByteString getCiphertext() {
        if (idOrDataCase_ == 2) {
          return (com.google.protobuf.ByteString) idOrData_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>bytes ciphertext = 2;</code>
       * @param value The ciphertext to set.
       * @return This builder for chaining.
       */
      public Builder setCiphertext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  idOrDataCase_ = 2;
        idOrData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>bytes ciphertext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCiphertext() {
        if (idOrDataCase_ == 2) {
          idOrDataCase_ = 0;
          idOrData_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.DecryptDocStreamReq)
    }

    // @@protoc_insertion_point(class_scope:proto.DecryptDocStreamReq)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecryptDocStreamReq>
        PARSER = new com.google.protobuf.AbstractParser<DecryptDocStreamReq>() {
      @java.lang.Override
      public DecryptDocStreamReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DecryptDocStreamReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecryptDocStreamReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecryptDocStreamReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecryptDocStreamRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.DecryptDocStreamResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    java.lang.String getDocID();
    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <pre>
     * The decrypted data of the document.
     * </pre>
     *
     * <code>bytes plaintext = 2;</code>
     * @return The plaintext.
     */
    com.google.protobuf.ByteString getPlaintext();
  }
  /**
   * Protobuf type {@code proto.DecryptDocStreamResp}
   */
  public  static final class DecryptDocStreamResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.DecryptDocStreamResp)
      DecryptDocStreamRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DecryptDocStreamResp.newBuilder() to construct.
    private DecryptDocStreamResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecryptDocStreamResp() {
      docID_ = "";
      plaintext_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DecryptDocStreamResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DecryptDocStreamResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docID_ = s;
              break;
            }
            case 18: {

              plaintext_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.Builder.class);
    }

    public static final int DOCID_FIELD_NUMBER = 1;
    private volatile java.lang.Object docID_;
    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAINTEXT_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString plaintext_;
    /**
     * <pre>
     * The decrypted data of the document.
     * </pre>
     *
     * <code>bytes plaintext = 2;</code>
     * @return The plaintext.
     */
    public com.google.protobuf.ByteString getPlaintext() {
      return plaintext_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDocIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docID_);
      }
      if (!plaintext_.isEmpty()) {
        output.writeBytes(2, plaintext_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDocIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docID_);
      }
      if (!plaintext_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, plaintext_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp) obj;

      if (!getDocID()
          .equals(other.getDocID())) return false;
      if (!getPlaintext()
          .equals(other.getPlaintext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCID_FIELD_NUMBER;
      hash = (53 * hash) + getDocID().hashCode();
      hash = (37 * hash) + PLAINTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getPlaintext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.DecryptDocStreamResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.DecryptDocStreamResp)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docID_ = "";

        plaintext_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocStreamResp_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp(this);
        result.docID_ = docID_;
        result.plaintext_ = plaintext_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp.getDefaultInstance()) return this;
        if (!other.getDocID().isEmpty()) {
          docID_ = other.docID_;
          onChanged();
        }
        if (other.getPlaintext() != com.google.protobuf.ByteString.EMPTY) {
          setPlaintext(other.getPlaintext());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docID_ = "";
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The docID.
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = docID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The bytes for docID.
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = docID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocID() {
        
        docID_ = getDefaultInstance().getDocID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The bytes for docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docID_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString plaintext_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>bytes plaintext = 2;</code>
       * @return The plaintext.
       */
      public com.google.protobuf.ByteString getPlaintext() {
        return plaintext_;
      }
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>bytes plaintext = 2;</code>
       * @param value The plaintext to set.
       * @return This builder for chaining.
       */
      public Builder setPlaintext(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plaintext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>bytes plaintext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlaintext() {
        
        plaintext_ = getDefaultInstance().getPlaintext();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.DecryptDocStreamResp)
    }

    // @@protoc_insertion_point(class_scope:proto.DecryptDocStreamResp)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecryptDocStreamResp>
        PARSER = new com.google.protobuf.AbstractParser<DecryptDocStreamResp>() {
      @java.lang.Override
      public DecryptDocStreamResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DecryptDocStreamResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecryptDocStreamResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecryptDocStreamResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocStreamResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptDocReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.EncryptDocReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The docName.
     */
    java.lang.String getDocName();
    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The bytes for docName.
     */
    com.google.protobuf.ByteString
        getDocNameBytes();

    /**
     * <pre>
     * The data of the document to encrypt.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The plaintext.
     */
    java.lang.String getPlaintext();
    /**
     * <pre>
     * The data of the document to encrypt.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The bytes for plaintext.
     */
    com.google.protobuf.ByteString
        getPlaintextBytes();
  }
  /**
   * Protobuf type {@code proto.EncryptDocReq}
   */
  public  static final class EncryptDocReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.EncryptDocReq)
      EncryptDocReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptDocReq.newBuilder() to construct.
    private EncryptDocReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptDocReq() {
      docName_ = "";
      plaintext_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptDocReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptDocReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              plaintext_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.Builder.class);
    }

    public static final int DOCNAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object docName_;
    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The docName.
     */
    public java.lang.String getDocName() {
      java.lang.Object ref = docName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the document to encrypt.
     * </pre>
     *
     * <code>string docName = 1;</code>
     * @return The bytes for docName.
     */
    public com.google.protobuf.ByteString
        getDocNameBytes() {
      java.lang.Object ref = docName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAINTEXT_FIELD_NUMBER = 2;
    private volatile java.lang.Object plaintext_;
    /**
     * <pre>
     * The data of the document to encrypt.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The plaintext.
     */
    public java.lang.String getPlaintext() {
      java.lang.Object ref = plaintext_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plaintext_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The data of the document to encrypt.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The bytes for plaintext.
     */
    public com.google.protobuf.ByteString
        getPlaintextBytes() {
      java.lang.Object ref = plaintext_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plaintext_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDocNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docName_);
      }
      if (!getPlaintextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, plaintext_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDocNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docName_);
      }
      if (!getPlaintextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, plaintext_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq) obj;

      if (!getDocName()
          .equals(other.getDocName())) return false;
      if (!getPlaintext()
          .equals(other.getPlaintext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCNAME_FIELD_NUMBER;
      hash = (53 * hash) + getDocName().hashCode();
      hash = (37 * hash) + PLAINTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getPlaintext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.EncryptDocReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.EncryptDocReq)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docName_ = "";

        plaintext_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocReq_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq(this);
        result.docName_ = docName_;
        result.plaintext_ = plaintext_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq.getDefaultInstance()) return this;
        if (!other.getDocName().isEmpty()) {
          docName_ = other.docName_;
          onChanged();
        }
        if (!other.getPlaintext().isEmpty()) {
          plaintext_ = other.plaintext_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docName_ = "";
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @return The docName.
       */
      public java.lang.String getDocName() {
        java.lang.Object ref = docName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @return The bytes for docName.
       */
      public com.google.protobuf.ByteString
          getDocNameBytes() {
        java.lang.Object ref = docName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @param value The docName to set.
       * @return This builder for chaining.
       */
      public Builder setDocName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocName() {
        
        docName_ = getDefaultInstance().getDocName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the document to encrypt.
       * </pre>
       *
       * <code>string docName = 1;</code>
       * @param value The bytes for docName to set.
       * @return This builder for chaining.
       */
      public Builder setDocNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object plaintext_ = "";
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @return The plaintext.
       */
      public java.lang.String getPlaintext() {
        java.lang.Object ref = plaintext_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plaintext_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @return The bytes for plaintext.
       */
      public com.google.protobuf.ByteString
          getPlaintextBytes() {
        java.lang.Object ref = plaintext_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plaintext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @param value The plaintext to set.
       * @return This builder for chaining.
       */
      public Builder setPlaintext(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plaintext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlaintext() {
        
        plaintext_ = getDefaultInstance().getPlaintext();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data of the document to encrypt.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @param value The bytes for plaintext to set.
       * @return This builder for chaining.
       */
      public Builder setPlaintextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plaintext_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.EncryptDocReq)
    }

    // @@protoc_insertion_point(class_scope:proto.EncryptDocReq)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncryptDocReq>
        PARSER = new com.google.protobuf.AbstractParser<EncryptDocReq>() {
      @java.lang.Override
      public EncryptDocReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptDocReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptDocReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptDocReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptDocRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.EncryptDocResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    java.lang.String getDocID();
    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <pre>
     * The encrypted data of the document.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The ciphertext.
     */
    java.lang.String getCiphertext();
    /**
     * <pre>
     * The encrypted data of the document.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The bytes for ciphertext.
     */
    com.google.protobuf.ByteString
        getCiphertextBytes();
  }
  /**
   * Protobuf type {@code proto.EncryptDocResp}
   */
  public  static final class EncryptDocResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.EncryptDocResp)
      EncryptDocRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptDocResp.newBuilder() to construct.
    private EncryptDocResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptDocResp() {
      docID_ = "";
      ciphertext_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptDocResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptDocResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docID_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              ciphertext_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.Builder.class);
    }

    public static final int DOCID_FIELD_NUMBER = 1;
    private volatile java.lang.Object docID_;
    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the encrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CIPHERTEXT_FIELD_NUMBER = 2;
    private volatile java.lang.Object ciphertext_;
    /**
     * <pre>
     * The encrypted data of the document.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The ciphertext.
     */
    public java.lang.String getCiphertext() {
      java.lang.Object ref = ciphertext_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ciphertext_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The encrypted data of the document.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The bytes for ciphertext.
     */
    public com.google.protobuf.ByteString
        getCiphertextBytes() {
      java.lang.Object ref = ciphertext_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ciphertext_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDocIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docID_);
      }
      if (!getCiphertextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ciphertext_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDocIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docID_);
      }
      if (!getCiphertextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ciphertext_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp) obj;

      if (!getDocID()
          .equals(other.getDocID())) return false;
      if (!getCiphertext()
          .equals(other.getCiphertext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCID_FIELD_NUMBER;
      hash = (53 * hash) + getDocID().hashCode();
      hash = (37 * hash) + CIPHERTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getCiphertext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.EncryptDocResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.EncryptDocResp)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docID_ = "";

        ciphertext_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_EncryptDocResp_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp(this);
        result.docID_ = docID_;
        result.ciphertext_ = ciphertext_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp.getDefaultInstance()) return this;
        if (!other.getDocID().isEmpty()) {
          docID_ = other.docID_;
          onChanged();
        }
        if (!other.getCiphertext().isEmpty()) {
          ciphertext_ = other.ciphertext_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docID_ = "";
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The docID.
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = docID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The bytes for docID.
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = docID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocID() {
        
        docID_ = getDefaultInstance().getDocID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the encrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The bytes for docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ciphertext_ = "";
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @return The ciphertext.
       */
      public java.lang.String getCiphertext() {
        java.lang.Object ref = ciphertext_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ciphertext_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @return The bytes for ciphertext.
       */
      public com.google.protobuf.ByteString
          getCiphertextBytes() {
        java.lang.Object ref = ciphertext_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ciphertext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @param value The ciphertext to set.
       * @return This builder for chaining.
       */
      public Builder setCiphertext(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ciphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCiphertext() {
        
        ciphertext_ = getDefaultInstance().getCiphertext();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The encrypted data of the document.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @param value The bytes for ciphertext to set.
       * @return This builder for chaining.
       */
      public Builder setCiphertextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ciphertext_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.EncryptDocResp)
    }

    // @@protoc_insertion_point(class_scope:proto.EncryptDocResp)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncryptDocResp>
        PARSER = new com.google.protobuf.AbstractParser<EncryptDocResp>() {
      @java.lang.Override
      public EncryptDocResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptDocResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptDocResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptDocResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.EncryptDocResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecryptDocReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.DecryptDocReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    java.lang.String getDocID();
    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <pre>
     * The data of the document to decrypt.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The ciphertext.
     */
    java.lang.String getCiphertext();
    /**
     * <pre>
     * The data of the document to decrypt.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The bytes for ciphertext.
     */
    com.google.protobuf.ByteString
        getCiphertextBytes();
  }
  /**
   * Protobuf type {@code proto.DecryptDocReq}
   */
  public  static final class DecryptDocReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.DecryptDocReq)
      DecryptDocReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DecryptDocReq.newBuilder() to construct.
    private DecryptDocReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecryptDocReq() {
      docID_ = "";
      ciphertext_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DecryptDocReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DecryptDocReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docID_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              ciphertext_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.Builder.class);
    }

    public static final int DOCID_FIELD_NUMBER = 1;
    private volatile java.lang.Object docID_;
    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the document to decrypt.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CIPHERTEXT_FIELD_NUMBER = 2;
    private volatile java.lang.Object ciphertext_;
    /**
     * <pre>
     * The data of the document to decrypt.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The ciphertext.
     */
    public java.lang.String getCiphertext() {
      java.lang.Object ref = ciphertext_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ciphertext_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The data of the document to decrypt.
     * </pre>
     *
     * <code>string ciphertext = 2;</code>
     * @return The bytes for ciphertext.
     */
    public com.google.protobuf.ByteString
        getCiphertextBytes() {
      java.lang.Object ref = ciphertext_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ciphertext_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDocIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docID_);
      }
      if (!getCiphertextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, ciphertext_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDocIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docID_);
      }
      if (!getCiphertextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, ciphertext_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq) obj;

      if (!getDocID()
          .equals(other.getDocID())) return false;
      if (!getCiphertext()
          .equals(other.getCiphertext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCID_FIELD_NUMBER;
      hash = (53 * hash) + getDocID().hashCode();
      hash = (37 * hash) + CIPHERTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getCiphertext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.DecryptDocReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.DecryptDocReq)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docID_ = "";

        ciphertext_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocReq_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq(this);
        result.docID_ = docID_;
        result.ciphertext_ = ciphertext_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq.getDefaultInstance()) return this;
        if (!other.getDocID().isEmpty()) {
          docID_ = other.docID_;
          onChanged();
        }
        if (!other.getCiphertext().isEmpty()) {
          ciphertext_ = other.ciphertext_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docID_ = "";
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The docID.
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = docID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The bytes for docID.
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = docID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocID() {
        
        docID_ = getDefaultInstance().getDocID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the document to decrypt.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The bytes for docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ciphertext_ = "";
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @return The ciphertext.
       */
      public java.lang.String getCiphertext() {
        java.lang.Object ref = ciphertext_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ciphertext_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @return The bytes for ciphertext.
       */
      public com.google.protobuf.ByteString
          getCiphertextBytes() {
        java.lang.Object ref = ciphertext_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ciphertext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @param value The ciphertext to set.
       * @return This builder for chaining.
       */
      public Builder setCiphertext(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ciphertext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCiphertext() {
        
        ciphertext_ = getDefaultInstance().getCiphertext();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The data of the document to decrypt.
       * </pre>
       *
       * <code>string ciphertext = 2;</code>
       * @param value The bytes for ciphertext to set.
       * @return This builder for chaining.
       */
      public Builder setCiphertextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ciphertext_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.DecryptDocReq)
    }

    // @@protoc_insertion_point(class_scope:proto.DecryptDocReq)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecryptDocReq>
        PARSER = new com.google.protobuf.AbstractParser<DecryptDocReq>() {
      @java.lang.Override
      public DecryptDocReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DecryptDocReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecryptDocReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecryptDocReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecryptDocRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.DecryptDocResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    java.lang.String getDocID();
    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <pre>
     * The decrypted data of the document.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The plaintext.
     */
    java.lang.String getPlaintext();
    /**
     * <pre>
     * The decrypted data of the document.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The bytes for plaintext.
     */
    com.google.protobuf.ByteString
        getPlaintextBytes();
  }
  /**
   * Protobuf type {@code proto.DecryptDocResp}
   */
  public  static final class DecryptDocResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.DecryptDocResp)
      DecryptDocRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DecryptDocResp.newBuilder() to construct.
    private DecryptDocResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecryptDocResp() {
      docID_ = "";
      plaintext_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DecryptDocResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DecryptDocResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              docID_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              plaintext_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.Builder.class);
    }

    public static final int DOCID_FIELD_NUMBER = 1;
    private volatile java.lang.Object docID_;
    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The docID.
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        docID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The ID of the decrypted document.
     * </pre>
     *
     * <code>string docID = 1;</code>
     * @return The bytes for docID.
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAINTEXT_FIELD_NUMBER = 2;
    private volatile java.lang.Object plaintext_;
    /**
     * <pre>
     * The decrypted data of the document.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The plaintext.
     */
    public java.lang.String getPlaintext() {
      java.lang.Object ref = plaintext_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        plaintext_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The decrypted data of the document.
     * </pre>
     *
     * <code>string plaintext = 2;</code>
     * @return The bytes for plaintext.
     */
    public com.google.protobuf.ByteString
        getPlaintextBytes() {
      java.lang.Object ref = plaintext_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        plaintext_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getDocIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, docID_);
      }
      if (!getPlaintextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, plaintext_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getDocIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, docID_);
      }
      if (!getPlaintextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, plaintext_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp other = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp) obj;

      if (!getDocID()
          .equals(other.getDocID())) return false;
      if (!getPlaintext()
          .equals(other.getPlaintext())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DOCID_FIELD_NUMBER;
      hash = (53 * hash) + getDocID().hashCode();
      hash = (37 * hash) + PLAINTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getPlaintext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.DecryptDocResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.DecryptDocResp)
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.class, com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        docID_ = "";

        plaintext_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.internal_static_proto_DecryptDocResp_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp build() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp result = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp(this);
        result.docID_ = docID_;
        result.plaintext_ = plaintext_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp.getDefaultInstance()) return this;
        if (!other.getDocID().isEmpty()) {
          docID_ = other.docID_;
          onChanged();
        }
        if (!other.getPlaintext().isEmpty()) {
          plaintext_ = other.plaintext_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object docID_ = "";
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The docID.
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = docID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          docID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return The bytes for docID.
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = docID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDocID() {
        
        docID_ = getDefaultInstance().getDocID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ID of the decrypted document.
       * </pre>
       *
       * <code>string docID = 1;</code>
       * @param value The bytes for docID to set.
       * @return This builder for chaining.
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        docID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object plaintext_ = "";
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @return The plaintext.
       */
      public java.lang.String getPlaintext() {
        java.lang.Object ref = plaintext_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          plaintext_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @return The bytes for plaintext.
       */
      public com.google.protobuf.ByteString
          getPlaintextBytes() {
        java.lang.Object ref = plaintext_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          plaintext_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @param value The plaintext to set.
       * @return This builder for chaining.
       */
      public Builder setPlaintext(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        plaintext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlaintext() {
        
        plaintext_ = getDefaultInstance().getPlaintext();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The decrypted data of the document.
       * </pre>
       *
       * <code>string plaintext = 2;</code>
       * @param value The bytes for plaintext to set.
       * @return This builder for chaining.
       */
      public Builder setPlaintextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        plaintext_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.DecryptDocResp)
    }

    // @@protoc_insertion_point(class_scope:proto.DecryptDocResp)
    private static final com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp();
    }

    public static com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecryptDocResp>
        PARSER = new com.google.protobuf.AbstractParser<DecryptDocResp>() {
      @java.lang.Override
      public DecryptDocResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DecryptDocResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecryptDocResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecryptDocResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.DocumentsNoStore.DecryptDocResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_EncryptDocStreamReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_EncryptDocStreamReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_EncryptDocStreamResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_EncryptDocStreamResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_DecryptDocStreamReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_DecryptDocStreamReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_DecryptDocStreamResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_DecryptDocStreamResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_EncryptDocReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_EncryptDocReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_EncryptDocResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_EncryptDocResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_DecryptDocReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_DecryptDocReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_DecryptDocResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_DecryptDocResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025documentNoStore.proto\022\005proto\032,protoc-g" +
      "en-swagger/options/annotations.proto\"K\n\023" +
      "EncryptDocStreamReq\022\021\n\007docName\030\001 \001(\tH\000\022\023" +
      "\n\tplaintext\030\002 \001(\014H\000B\014\n\nNameOrData\"9\n\024Enc" +
      "ryptDocStreamResp\022\r\n\005docID\030\001 \001(\t\022\022\n\nciph" +
      "ertext\030\002 \001(\014\"H\n\023DecryptDocStreamReq\022\017\n\005d" +
      "ocID\030\001 \001(\tH\000\022\024\n\nciphertext\030\002 \001(\014H\000B\n\n\010Id" +
      "OrData\"8\n\024DecryptDocStreamResp\022\r\n\005docID\030" +
      "\001 \001(\t\022\021\n\tplaintext\030\002 \001(\014\"\222\001\n\rEncryptDocR" +
      "eq\022\017\n\007docName\030\001 \001(\t\022\021\n\tplaintext\030\002 \001(\t:]" +
      "\222AZ\n\017*\rEncryptDocReq2G\022E{\"docName\": \"bri" +
      "beamount.pdf\", \"plaintext\": \"I paid 1M t" +
      "o Volodymyr\"}\"\223\001\n\016EncryptDocResp\022\r\n\005docI" +
      "D\030\001 \001(\t\022\022\n\nciphertext\030\002 \001(\t:^\222A[\n\020*\016Encr" +
      "yptDocResp2G\022E{\"docID\": \"bribeamount_ID." +
      "pdf\", \"ciphertext\": \"very encrypted stuf" +
      "f\"}\"\221\001\n\rDecryptDocReq\022\r\n\005docID\030\001 \001(\t\022\022\n\n" +
      "ciphertext\030\002 \001(\t:]\222AZ\n\017*\rDecryptDocReq2G" +
      "\022E{\"docID\": \"bribeamount_ID.pdf\", \"ciphe" +
      "rtext\": \"very encrypted stuff\"}\"\223\001\n\016Decr" +
      "yptDocResp\022\r\n\005docID\030\001 \001(\t\022\021\n\tplaintext\030\002" +
      " \001(\t:_\222A\\\n\020*\016DecryptDocResp2H\022F{\"docID\":" +
      " \"bribeamount_ID.pdf\", \"plaintext\": \"I p" +
      "aid 1M to Volodymyr\"}B9\n\"com.strongsalt." +
      "strongdoc.sdk.protoB\020DocumentsNoStore\210\001\001" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor(),
        });
    internal_static_proto_EncryptDocStreamReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_EncryptDocStreamReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_EncryptDocStreamReq_descriptor,
        new java.lang.String[] { "DocName", "Plaintext", "NameOrData", });
    internal_static_proto_EncryptDocStreamResp_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_EncryptDocStreamResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_EncryptDocStreamResp_descriptor,
        new java.lang.String[] { "DocID", "Ciphertext", });
    internal_static_proto_DecryptDocStreamReq_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_DecryptDocStreamReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_DecryptDocStreamReq_descriptor,
        new java.lang.String[] { "DocID", "Ciphertext", "IdOrData", });
    internal_static_proto_DecryptDocStreamResp_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_DecryptDocStreamResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_DecryptDocStreamResp_descriptor,
        new java.lang.String[] { "DocID", "Plaintext", });
    internal_static_proto_EncryptDocReq_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_EncryptDocReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_EncryptDocReq_descriptor,
        new java.lang.String[] { "DocName", "Plaintext", });
    internal_static_proto_EncryptDocResp_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_proto_EncryptDocResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_EncryptDocResp_descriptor,
        new java.lang.String[] { "DocID", "Ciphertext", });
    internal_static_proto_DecryptDocReq_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_proto_DecryptDocReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_DecryptDocReq_descriptor,
        new java.lang.String[] { "DocID", "Ciphertext", });
    internal_static_proto_DecryptDocResp_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_proto_DecryptDocResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_DecryptDocResp_descriptor,
        new java.lang.String[] { "DocID", "Plaintext", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_swagger.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
