// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encryption.proto

package com.strongsalt.strongdoc.sdk.proto;

public final class Encryption {
  private Encryption() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code proto.AccessType}
   */
  public enum AccessType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ORG = 0;</code>
     */
    ORG(0),
    /**
     * <code>USER = 1;</code>
     */
    USER(1),
    /**
     * <code>GROUP = 2;</code>
     */
    GROUP(2),
    /**
     * <code>UNKNOWN = 19;</code>
     */
    UNKNOWN(19),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORG = 0;</code>
     */
    public static final int ORG_VALUE = 0;
    /**
     * <code>USER = 1;</code>
     */
    public static final int USER_VALUE = 1;
    /**
     * <code>GROUP = 2;</code>
     */
    public static final int GROUP_VALUE = 2;
    /**
     * <code>UNKNOWN = 19;</code>
     */
    public static final int UNKNOWN_VALUE = 19;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AccessType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AccessType forNumber(int value) {
      switch (value) {
        case 0: return ORG;
        case 1: return USER;
        case 2: return GROUP;
        case 19: return UNKNOWN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AccessType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AccessType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccessType>() {
            public AccessType findValueByNumber(int number) {
              return AccessType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.getDescriptor().getEnumTypes().get(0);
    }

    private static final AccessType[] VALUES = values();

    public static AccessType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AccessType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.AccessType)
  }

  public interface KeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.Key)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <code>string keyID = 2;</code>
     * @return The keyID.
     */
    java.lang.String getKeyID();
    /**
     * <code>string keyID = 2;</code>
     * @return The bytes for keyID.
     */
    com.google.protobuf.ByteString
        getKeyIDBytes();

    /**
     * <code>string ownerID = 3;</code>
     * @return The ownerID.
     */
    java.lang.String getOwnerID();
    /**
     * <code>string ownerID = 3;</code>
     * @return The bytes for ownerID.
     */
    com.google.protobuf.ByteString
        getOwnerIDBytes();

    /**
     * <code>.proto.AccessType ownerType = 4;</code>
     * @return The enum numeric value on the wire for ownerType.
     */
    int getOwnerTypeValue();
    /**
     * <code>.proto.AccessType ownerType = 4;</code>
     * @return The ownerType.
     */
    com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType getOwnerType();
  }
  /**
   * Protobuf type {@code proto.Key}
   */
  public  static final class Key extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.Key)
      KeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Key.newBuilder() to construct.
    private Key(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Key() {
      key_ = "";
      keyID_ = "";
      ownerID_ = "";
      ownerType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Key();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Key(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              keyID_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              ownerID_ = s;
              break;
            }
            case 32: {
              int rawValue = input.readEnum();

              ownerType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_Key_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_Key_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.Encryption.Key.class, com.strongsalt.strongdoc.sdk.proto.Encryption.Key.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <code>string key = 1;</code>
     * @return The key.
     */
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEYID_FIELD_NUMBER = 2;
    private volatile java.lang.Object keyID_;
    /**
     * <code>string keyID = 2;</code>
     * @return The keyID.
     */
    public java.lang.String getKeyID() {
      java.lang.Object ref = keyID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyID_ = s;
        return s;
      }
    }
    /**
     * <code>string keyID = 2;</code>
     * @return The bytes for keyID.
     */
    public com.google.protobuf.ByteString
        getKeyIDBytes() {
      java.lang.Object ref = keyID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNERID_FIELD_NUMBER = 3;
    private volatile java.lang.Object ownerID_;
    /**
     * <code>string ownerID = 3;</code>
     * @return The ownerID.
     */
    public java.lang.String getOwnerID() {
      java.lang.Object ref = ownerID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ownerID_ = s;
        return s;
      }
    }
    /**
     * <code>string ownerID = 3;</code>
     * @return The bytes for ownerID.
     */
    public com.google.protobuf.ByteString
        getOwnerIDBytes() {
      java.lang.Object ref = ownerID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ownerID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNERTYPE_FIELD_NUMBER = 4;
    private int ownerType_;
    /**
     * <code>.proto.AccessType ownerType = 4;</code>
     * @return The enum numeric value on the wire for ownerType.
     */
    public int getOwnerTypeValue() {
      return ownerType_;
    }
    /**
     * <code>.proto.AccessType ownerType = 4;</code>
     * @return The ownerType.
     */
    public com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType getOwnerType() {
      @SuppressWarnings("deprecation")
      com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType result = com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.valueOf(ownerType_);
      return result == null ? com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!getKeyIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, keyID_);
      }
      if (!getOwnerIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ownerID_);
      }
      if (ownerType_ != com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.ORG.getNumber()) {
        output.writeEnum(4, ownerType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!getKeyIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, keyID_);
      }
      if (!getOwnerIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ownerID_);
      }
      if (ownerType_ != com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.ORG.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, ownerType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.Key)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.Encryption.Key other = (com.strongsalt.strongdoc.sdk.proto.Encryption.Key) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getKeyID()
          .equals(other.getKeyID())) return false;
      if (!getOwnerID()
          .equals(other.getOwnerID())) return false;
      if (ownerType_ != other.ownerType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + KEYID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyID().hashCode();
      hash = (37 * hash) + OWNERID_FIELD_NUMBER;
      hash = (53 * hash) + getOwnerID().hashCode();
      hash = (37 * hash) + OWNERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + ownerType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.Encryption.Key prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.Key}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.Key)
        com.strongsalt.strongdoc.sdk.proto.Encryption.KeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_Key_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_Key_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.Encryption.Key.class, com.strongsalt.strongdoc.sdk.proto.Encryption.Key.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.Encryption.Key.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        keyID_ = "";

        ownerID_ = "";

        ownerType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_Key_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.Key getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.Key.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.Key build() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.Key result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.Key buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.Key result = new com.strongsalt.strongdoc.sdk.proto.Encryption.Key(this);
        result.key_ = key_;
        result.keyID_ = keyID_;
        result.ownerID_ = ownerID_;
        result.ownerType_ = ownerType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.Key) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.Encryption.Key)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.Encryption.Key other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.Encryption.Key.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getKeyID().isEmpty()) {
          keyID_ = other.keyID_;
          onChanged();
        }
        if (!other.getOwnerID().isEmpty()) {
          ownerID_ = other.ownerID_;
          onChanged();
        }
        if (other.ownerType_ != 0) {
          setOwnerTypeValue(other.getOwnerTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.Encryption.Key parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.Encryption.Key) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object keyID_ = "";
      /**
       * <code>string keyID = 2;</code>
       * @return The keyID.
       */
      public java.lang.String getKeyID() {
        java.lang.Object ref = keyID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string keyID = 2;</code>
       * @return The bytes for keyID.
       */
      public com.google.protobuf.ByteString
          getKeyIDBytes() {
        java.lang.Object ref = keyID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string keyID = 2;</code>
       * @param value The keyID to set.
       * @return This builder for chaining.
       */
      public Builder setKeyID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string keyID = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyID() {
        
        keyID_ = getDefaultInstance().getKeyID();
        onChanged();
        return this;
      }
      /**
       * <code>string keyID = 2;</code>
       * @param value The bytes for keyID to set.
       * @return This builder for chaining.
       */
      public Builder setKeyIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ownerID_ = "";
      /**
       * <code>string ownerID = 3;</code>
       * @return The ownerID.
       */
      public java.lang.String getOwnerID() {
        java.lang.Object ref = ownerID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ownerID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string ownerID = 3;</code>
       * @return The bytes for ownerID.
       */
      public com.google.protobuf.ByteString
          getOwnerIDBytes() {
        java.lang.Object ref = ownerID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ownerID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string ownerID = 3;</code>
       * @param value The ownerID to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ownerID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string ownerID = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerID() {
        
        ownerID_ = getDefaultInstance().getOwnerID();
        onChanged();
        return this;
      }
      /**
       * <code>string ownerID = 3;</code>
       * @param value The bytes for ownerID to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ownerID_ = value;
        onChanged();
        return this;
      }

      private int ownerType_ = 0;
      /**
       * <code>.proto.AccessType ownerType = 4;</code>
       * @return The enum numeric value on the wire for ownerType.
       */
      public int getOwnerTypeValue() {
        return ownerType_;
      }
      /**
       * <code>.proto.AccessType ownerType = 4;</code>
       * @param value The enum numeric value on the wire for ownerType to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerTypeValue(int value) {
        ownerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.proto.AccessType ownerType = 4;</code>
       * @return The ownerType.
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType getOwnerType() {
        @SuppressWarnings("deprecation")
        com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType result = com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.valueOf(ownerType_);
        return result == null ? com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.UNRECOGNIZED : result;
      }
      /**
       * <code>.proto.AccessType ownerType = 4;</code>
       * @param value The ownerType to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerType(com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ownerType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.proto.AccessType ownerType = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerType() {
        
        ownerType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.Key)
    }

    // @@protoc_insertion_point(class_scope:proto.Key)
    private static final com.strongsalt.strongdoc.sdk.proto.Encryption.Key DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.Encryption.Key();
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.Key getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Key>
        PARSER = new com.google.protobuf.AbstractParser<Key>() {
      @java.lang.Override
      public Key parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Key(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Key> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Key> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.Encryption.Key getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptedKeyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.EncryptedKey)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * string of {A}B
     * </pre>
     *
     * <code>string encKey = 1;</code>
     * @return The encKey.
     */
    java.lang.String getEncKey();
    /**
     * <pre>
     * string of {A}B
     * </pre>
     *
     * <code>string encKey = 1;</code>
     * @return The bytes for encKey.
     */
    com.google.protobuf.ByteString
        getEncKeyBytes();

    /**
     * <pre>
     *B's ID
     * </pre>
     *
     * <code>string encryptorID = 2;</code>
     * @return The encryptorID.
     */
    java.lang.String getEncryptorID();
    /**
     * <pre>
     *B's ID
     * </pre>
     *
     * <code>string encryptorID = 2;</code>
     * @return The bytes for encryptorID.
     */
    com.google.protobuf.ByteString
        getEncryptorIDBytes();

    /**
     * <pre>
     *B's version
     * </pre>
     *
     * <code>int32 encryptorVersion = 3;</code>
     * @return The encryptorVersion.
     */
    int getEncryptorVersion();

    /**
     * <pre>
     *A's ID
     * </pre>
     *
     * <code>string keyID = 4;</code>
     * @return The keyID.
     */
    java.lang.String getKeyID();
    /**
     * <pre>
     *A's ID
     * </pre>
     *
     * <code>string keyID = 4;</code>
     * @return The bytes for keyID.
     */
    com.google.protobuf.ByteString
        getKeyIDBytes();

    /**
     * <pre>
     *A's version
     * </pre>
     *
     * <code>int32 keyVersion = 5;</code>
     * @return The keyVersion.
     */
    int getKeyVersion();

    /**
     * <pre>
     * B's owener Id
     * </pre>
     *
     * <code>string ownerID = 6;</code>
     * @return The ownerID.
     */
    java.lang.String getOwnerID();
    /**
     * <pre>
     * B's owener Id
     * </pre>
     *
     * <code>string ownerID = 6;</code>
     * @return The bytes for ownerID.
     */
    com.google.protobuf.ByteString
        getOwnerIDBytes();

    /**
     * <pre>
     * B's owner type
     * </pre>
     *
     * <code>.proto.AccessType ownerType = 7;</code>
     * @return The enum numeric value on the wire for ownerType.
     */
    int getOwnerTypeValue();
    /**
     * <pre>
     * B's owner type
     * </pre>
     *
     * <code>.proto.AccessType ownerType = 7;</code>
     * @return The ownerType.
     */
    com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType getOwnerType();
  }
  /**
   * Protobuf type {@code proto.EncryptedKey}
   */
  public  static final class EncryptedKey extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.EncryptedKey)
      EncryptedKeyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptedKey.newBuilder() to construct.
    private EncryptedKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptedKey() {
      encKey_ = "";
      encryptorID_ = "";
      keyID_ = "";
      ownerID_ = "";
      ownerType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptedKey();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptedKey(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              encKey_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              encryptorID_ = s;
              break;
            }
            case 24: {

              encryptorVersion_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              keyID_ = s;
              break;
            }
            case 40: {

              keyVersion_ = input.readInt32();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              ownerID_ = s;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              ownerType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_EncryptedKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_EncryptedKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.class, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder.class);
    }

    public static final int ENCKEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object encKey_;
    /**
     * <pre>
     * string of {A}B
     * </pre>
     *
     * <code>string encKey = 1;</code>
     * @return The encKey.
     */
    public java.lang.String getEncKey() {
      java.lang.Object ref = encKey_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encKey_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * string of {A}B
     * </pre>
     *
     * <code>string encKey = 1;</code>
     * @return The bytes for encKey.
     */
    public com.google.protobuf.ByteString
        getEncKeyBytes() {
      java.lang.Object ref = encKey_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCRYPTORID_FIELD_NUMBER = 2;
    private volatile java.lang.Object encryptorID_;
    /**
     * <pre>
     *B's ID
     * </pre>
     *
     * <code>string encryptorID = 2;</code>
     * @return The encryptorID.
     */
    public java.lang.String getEncryptorID() {
      java.lang.Object ref = encryptorID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        encryptorID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *B's ID
     * </pre>
     *
     * <code>string encryptorID = 2;</code>
     * @return The bytes for encryptorID.
     */
    public com.google.protobuf.ByteString
        getEncryptorIDBytes() {
      java.lang.Object ref = encryptorID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        encryptorID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCRYPTORVERSION_FIELD_NUMBER = 3;
    private int encryptorVersion_;
    /**
     * <pre>
     *B's version
     * </pre>
     *
     * <code>int32 encryptorVersion = 3;</code>
     * @return The encryptorVersion.
     */
    public int getEncryptorVersion() {
      return encryptorVersion_;
    }

    public static final int KEYID_FIELD_NUMBER = 4;
    private volatile java.lang.Object keyID_;
    /**
     * <pre>
     *A's ID
     * </pre>
     *
     * <code>string keyID = 4;</code>
     * @return The keyID.
     */
    public java.lang.String getKeyID() {
      java.lang.Object ref = keyID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *A's ID
     * </pre>
     *
     * <code>string keyID = 4;</code>
     * @return The bytes for keyID.
     */
    public com.google.protobuf.ByteString
        getKeyIDBytes() {
      java.lang.Object ref = keyID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KEYVERSION_FIELD_NUMBER = 5;
    private int keyVersion_;
    /**
     * <pre>
     *A's version
     * </pre>
     *
     * <code>int32 keyVersion = 5;</code>
     * @return The keyVersion.
     */
    public int getKeyVersion() {
      return keyVersion_;
    }

    public static final int OWNERID_FIELD_NUMBER = 6;
    private volatile java.lang.Object ownerID_;
    /**
     * <pre>
     * B's owener Id
     * </pre>
     *
     * <code>string ownerID = 6;</code>
     * @return The ownerID.
     */
    public java.lang.String getOwnerID() {
      java.lang.Object ref = ownerID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ownerID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * B's owener Id
     * </pre>
     *
     * <code>string ownerID = 6;</code>
     * @return The bytes for ownerID.
     */
    public com.google.protobuf.ByteString
        getOwnerIDBytes() {
      java.lang.Object ref = ownerID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ownerID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OWNERTYPE_FIELD_NUMBER = 7;
    private int ownerType_;
    /**
     * <pre>
     * B's owner type
     * </pre>
     *
     * <code>.proto.AccessType ownerType = 7;</code>
     * @return The enum numeric value on the wire for ownerType.
     */
    public int getOwnerTypeValue() {
      return ownerType_;
    }
    /**
     * <pre>
     * B's owner type
     * </pre>
     *
     * <code>.proto.AccessType ownerType = 7;</code>
     * @return The ownerType.
     */
    public com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType getOwnerType() {
      @SuppressWarnings("deprecation")
      com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType result = com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.valueOf(ownerType_);
      return result == null ? com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getEncKeyBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, encKey_);
      }
      if (!getEncryptorIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, encryptorID_);
      }
      if (encryptorVersion_ != 0) {
        output.writeInt32(3, encryptorVersion_);
      }
      if (!getKeyIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, keyID_);
      }
      if (keyVersion_ != 0) {
        output.writeInt32(5, keyVersion_);
      }
      if (!getOwnerIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, ownerID_);
      }
      if (ownerType_ != com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.ORG.getNumber()) {
        output.writeEnum(7, ownerType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getEncKeyBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, encKey_);
      }
      if (!getEncryptorIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, encryptorID_);
      }
      if (encryptorVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, encryptorVersion_);
      }
      if (!getKeyIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, keyID_);
      }
      if (keyVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, keyVersion_);
      }
      if (!getOwnerIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, ownerID_);
      }
      if (ownerType_ != com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.ORG.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, ownerType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey other = (com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey) obj;

      if (!getEncKey()
          .equals(other.getEncKey())) return false;
      if (!getEncryptorID()
          .equals(other.getEncryptorID())) return false;
      if (getEncryptorVersion()
          != other.getEncryptorVersion()) return false;
      if (!getKeyID()
          .equals(other.getKeyID())) return false;
      if (getKeyVersion()
          != other.getKeyVersion()) return false;
      if (!getOwnerID()
          .equals(other.getOwnerID())) return false;
      if (ownerType_ != other.ownerType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENCKEY_FIELD_NUMBER;
      hash = (53 * hash) + getEncKey().hashCode();
      hash = (37 * hash) + ENCRYPTORID_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptorID().hashCode();
      hash = (37 * hash) + ENCRYPTORVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getEncryptorVersion();
      hash = (37 * hash) + KEYID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyID().hashCode();
      hash = (37 * hash) + KEYVERSION_FIELD_NUMBER;
      hash = (53 * hash) + getKeyVersion();
      hash = (37 * hash) + OWNERID_FIELD_NUMBER;
      hash = (53 * hash) + getOwnerID().hashCode();
      hash = (37 * hash) + OWNERTYPE_FIELD_NUMBER;
      hash = (53 * hash) + ownerType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.EncryptedKey}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.EncryptedKey)
        com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_EncryptedKey_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_EncryptedKey_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.class, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        encKey_ = "";

        encryptorID_ = "";

        encryptorVersion_ = 0;

        keyID_ = "";

        keyVersion_ = 0;

        ownerID_ = "";

        ownerType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_EncryptedKey_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey build() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey result = new com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey(this);
        result.encKey_ = encKey_;
        result.encryptorID_ = encryptorID_;
        result.encryptorVersion_ = encryptorVersion_;
        result.keyID_ = keyID_;
        result.keyVersion_ = keyVersion_;
        result.ownerID_ = ownerID_;
        result.ownerType_ = ownerType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.getDefaultInstance()) return this;
        if (!other.getEncKey().isEmpty()) {
          encKey_ = other.encKey_;
          onChanged();
        }
        if (!other.getEncryptorID().isEmpty()) {
          encryptorID_ = other.encryptorID_;
          onChanged();
        }
        if (other.getEncryptorVersion() != 0) {
          setEncryptorVersion(other.getEncryptorVersion());
        }
        if (!other.getKeyID().isEmpty()) {
          keyID_ = other.keyID_;
          onChanged();
        }
        if (other.getKeyVersion() != 0) {
          setKeyVersion(other.getKeyVersion());
        }
        if (!other.getOwnerID().isEmpty()) {
          ownerID_ = other.ownerID_;
          onChanged();
        }
        if (other.ownerType_ != 0) {
          setOwnerTypeValue(other.getOwnerTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object encKey_ = "";
      /**
       * <pre>
       * string of {A}B
       * </pre>
       *
       * <code>string encKey = 1;</code>
       * @return The encKey.
       */
      public java.lang.String getEncKey() {
        java.lang.Object ref = encKey_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          encKey_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * string of {A}B
       * </pre>
       *
       * <code>string encKey = 1;</code>
       * @return The bytes for encKey.
       */
      public com.google.protobuf.ByteString
          getEncKeyBytes() {
        java.lang.Object ref = encKey_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encKey_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * string of {A}B
       * </pre>
       *
       * <code>string encKey = 1;</code>
       * @param value The encKey to set.
       * @return This builder for chaining.
       */
      public Builder setEncKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * string of {A}B
       * </pre>
       *
       * <code>string encKey = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncKey() {
        
        encKey_ = getDefaultInstance().getEncKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * string of {A}B
       * </pre>
       *
       * <code>string encKey = 1;</code>
       * @param value The bytes for encKey to set.
       * @return This builder for chaining.
       */
      public Builder setEncKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        encKey_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object encryptorID_ = "";
      /**
       * <pre>
       *B's ID
       * </pre>
       *
       * <code>string encryptorID = 2;</code>
       * @return The encryptorID.
       */
      public java.lang.String getEncryptorID() {
        java.lang.Object ref = encryptorID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          encryptorID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *B's ID
       * </pre>
       *
       * <code>string encryptorID = 2;</code>
       * @return The bytes for encryptorID.
       */
      public com.google.protobuf.ByteString
          getEncryptorIDBytes() {
        java.lang.Object ref = encryptorID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          encryptorID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *B's ID
       * </pre>
       *
       * <code>string encryptorID = 2;</code>
       * @param value The encryptorID to set.
       * @return This builder for chaining.
       */
      public Builder setEncryptorID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        encryptorID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *B's ID
       * </pre>
       *
       * <code>string encryptorID = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncryptorID() {
        
        encryptorID_ = getDefaultInstance().getEncryptorID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *B's ID
       * </pre>
       *
       * <code>string encryptorID = 2;</code>
       * @param value The bytes for encryptorID to set.
       * @return This builder for chaining.
       */
      public Builder setEncryptorIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        encryptorID_ = value;
        onChanged();
        return this;
      }

      private int encryptorVersion_ ;
      /**
       * <pre>
       *B's version
       * </pre>
       *
       * <code>int32 encryptorVersion = 3;</code>
       * @return The encryptorVersion.
       */
      public int getEncryptorVersion() {
        return encryptorVersion_;
      }
      /**
       * <pre>
       *B's version
       * </pre>
       *
       * <code>int32 encryptorVersion = 3;</code>
       * @param value The encryptorVersion to set.
       * @return This builder for chaining.
       */
      public Builder setEncryptorVersion(int value) {
        
        encryptorVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *B's version
       * </pre>
       *
       * <code>int32 encryptorVersion = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncryptorVersion() {
        
        encryptorVersion_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object keyID_ = "";
      /**
       * <pre>
       *A's ID
       * </pre>
       *
       * <code>string keyID = 4;</code>
       * @return The keyID.
       */
      public java.lang.String getKeyID() {
        java.lang.Object ref = keyID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *A's ID
       * </pre>
       *
       * <code>string keyID = 4;</code>
       * @return The bytes for keyID.
       */
      public com.google.protobuf.ByteString
          getKeyIDBytes() {
        java.lang.Object ref = keyID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *A's ID
       * </pre>
       *
       * <code>string keyID = 4;</code>
       * @param value The keyID to set.
       * @return This builder for chaining.
       */
      public Builder setKeyID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A's ID
       * </pre>
       *
       * <code>string keyID = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyID() {
        
        keyID_ = getDefaultInstance().getKeyID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A's ID
       * </pre>
       *
       * <code>string keyID = 4;</code>
       * @param value The bytes for keyID to set.
       * @return This builder for chaining.
       */
      public Builder setKeyIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyID_ = value;
        onChanged();
        return this;
      }

      private int keyVersion_ ;
      /**
       * <pre>
       *A's version
       * </pre>
       *
       * <code>int32 keyVersion = 5;</code>
       * @return The keyVersion.
       */
      public int getKeyVersion() {
        return keyVersion_;
      }
      /**
       * <pre>
       *A's version
       * </pre>
       *
       * <code>int32 keyVersion = 5;</code>
       * @param value The keyVersion to set.
       * @return This builder for chaining.
       */
      public Builder setKeyVersion(int value) {
        
        keyVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *A's version
       * </pre>
       *
       * <code>int32 keyVersion = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyVersion() {
        
        keyVersion_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ownerID_ = "";
      /**
       * <pre>
       * B's owener Id
       * </pre>
       *
       * <code>string ownerID = 6;</code>
       * @return The ownerID.
       */
      public java.lang.String getOwnerID() {
        java.lang.Object ref = ownerID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ownerID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * B's owener Id
       * </pre>
       *
       * <code>string ownerID = 6;</code>
       * @return The bytes for ownerID.
       */
      public com.google.protobuf.ByteString
          getOwnerIDBytes() {
        java.lang.Object ref = ownerID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ownerID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * B's owener Id
       * </pre>
       *
       * <code>string ownerID = 6;</code>
       * @param value The ownerID to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ownerID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * B's owener Id
       * </pre>
       *
       * <code>string ownerID = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerID() {
        
        ownerID_ = getDefaultInstance().getOwnerID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * B's owener Id
       * </pre>
       *
       * <code>string ownerID = 6;</code>
       * @param value The bytes for ownerID to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ownerID_ = value;
        onChanged();
        return this;
      }

      private int ownerType_ = 0;
      /**
       * <pre>
       * B's owner type
       * </pre>
       *
       * <code>.proto.AccessType ownerType = 7;</code>
       * @return The enum numeric value on the wire for ownerType.
       */
      public int getOwnerTypeValue() {
        return ownerType_;
      }
      /**
       * <pre>
       * B's owner type
       * </pre>
       *
       * <code>.proto.AccessType ownerType = 7;</code>
       * @param value The enum numeric value on the wire for ownerType to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerTypeValue(int value) {
        ownerType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * B's owner type
       * </pre>
       *
       * <code>.proto.AccessType ownerType = 7;</code>
       * @return The ownerType.
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType getOwnerType() {
        @SuppressWarnings("deprecation")
        com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType result = com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.valueOf(ownerType_);
        return result == null ? com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * B's owner type
       * </pre>
       *
       * <code>.proto.AccessType ownerType = 7;</code>
       * @param value The ownerType to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerType(com.strongsalt.strongdoc.sdk.proto.Encryption.AccessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        ownerType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * B's owner type
       * </pre>
       *
       * <code>.proto.AccessType ownerType = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerType() {
        
        ownerType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.EncryptedKey)
    }

    // @@protoc_insertion_point(class_scope:proto.EncryptedKey)
    private static final com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey();
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EncryptedKey>
        PARSER = new com.google.protobuf.AbstractParser<EncryptedKey>() {
      @java.lang.Override
      public EncryptedKey parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptedKey(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptedKey> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EncryptedKey> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetUserPrivateKeysReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.GetUserPrivateKeysReq)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code proto.GetUserPrivateKeysReq}
   */
  public  static final class GetUserPrivateKeysReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.GetUserPrivateKeysReq)
      GetUserPrivateKeysReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetUserPrivateKeysReq.newBuilder() to construct.
    private GetUserPrivateKeysReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetUserPrivateKeysReq() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetUserPrivateKeysReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetUserPrivateKeysReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.class, com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq other = (com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.GetUserPrivateKeysReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.GetUserPrivateKeysReq)
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.class, com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysReq_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq build() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq result = new com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.GetUserPrivateKeysReq)
    }

    // @@protoc_insertion_point(class_scope:proto.GetUserPrivateKeysReq)
    private static final com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq();
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetUserPrivateKeysReq>
        PARSER = new com.google.protobuf.AbstractParser<GetUserPrivateKeysReq>() {
      @java.lang.Override
      public GetUserPrivateKeysReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetUserPrivateKeysReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetUserPrivateKeysReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetUserPrivateKeysReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetUserPrivateKeysRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.GetUserPrivateKeysResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> 
        getEncryptedKeysList();
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getEncryptedKeys(int index);
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    int getEncryptedKeysCount();
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    java.util.List<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
        getEncryptedKeysOrBuilderList();
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder getEncryptedKeysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code proto.GetUserPrivateKeysResp}
   */
  public  static final class GetUserPrivateKeysResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.GetUserPrivateKeysResp)
      GetUserPrivateKeysRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetUserPrivateKeysResp.newBuilder() to construct.
    private GetUserPrivateKeysResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetUserPrivateKeysResp() {
      encryptedKeys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetUserPrivateKeysResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetUserPrivateKeysResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                encryptedKeys_ = new java.util.ArrayList<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey>();
                mutable_bitField0_ |= 0x00000001;
              }
              encryptedKeys_.add(
                  input.readMessage(com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          encryptedKeys_ = java.util.Collections.unmodifiableList(encryptedKeys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.class, com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.Builder.class);
    }

    public static final int ENCRYPTEDKEYS_FIELD_NUMBER = 1;
    private java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> encryptedKeys_;
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    public java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> getEncryptedKeysList() {
      return encryptedKeys_;
    }
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    public java.util.List<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
        getEncryptedKeysOrBuilderList() {
      return encryptedKeys_;
    }
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    public int getEncryptedKeysCount() {
      return encryptedKeys_.size();
    }
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getEncryptedKeys(int index) {
      return encryptedKeys_.get(index);
    }
    /**
     * <pre>
     * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
     */
    public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder getEncryptedKeysOrBuilder(
        int index) {
      return encryptedKeys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < encryptedKeys_.size(); i++) {
        output.writeMessage(1, encryptedKeys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < encryptedKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, encryptedKeys_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp other = (com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp) obj;

      if (!getEncryptedKeysList()
          .equals(other.getEncryptedKeysList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEncryptedKeysCount() > 0) {
        hash = (37 * hash) + ENCRYPTEDKEYS_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptedKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.GetUserPrivateKeysResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.GetUserPrivateKeysResp)
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.class, com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEncryptedKeysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (encryptedKeysBuilder_ == null) {
          encryptedKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          encryptedKeysBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_GetUserPrivateKeysResp_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp build() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp result = new com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp(this);
        int from_bitField0_ = bitField0_;
        if (encryptedKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            encryptedKeys_ = java.util.Collections.unmodifiableList(encryptedKeys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.encryptedKeys_ = encryptedKeys_;
        } else {
          result.encryptedKeys_ = encryptedKeysBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp.getDefaultInstance()) return this;
        if (encryptedKeysBuilder_ == null) {
          if (!other.encryptedKeys_.isEmpty()) {
            if (encryptedKeys_.isEmpty()) {
              encryptedKeys_ = other.encryptedKeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEncryptedKeysIsMutable();
              encryptedKeys_.addAll(other.encryptedKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.encryptedKeys_.isEmpty()) {
            if (encryptedKeysBuilder_.isEmpty()) {
              encryptedKeysBuilder_.dispose();
              encryptedKeysBuilder_ = null;
              encryptedKeys_ = other.encryptedKeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              encryptedKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEncryptedKeysFieldBuilder() : null;
            } else {
              encryptedKeysBuilder_.addAllMessages(other.encryptedKeys_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> encryptedKeys_ =
        java.util.Collections.emptyList();
      private void ensureEncryptedKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          encryptedKeys_ = new java.util.ArrayList<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey>(encryptedKeys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> encryptedKeysBuilder_;

      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> getEncryptedKeysList() {
        if (encryptedKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encryptedKeys_);
        } else {
          return encryptedKeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public int getEncryptedKeysCount() {
        if (encryptedKeysBuilder_ == null) {
          return encryptedKeys_.size();
        } else {
          return encryptedKeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getEncryptedKeys(int index) {
        if (encryptedKeysBuilder_ == null) {
          return encryptedKeys_.get(index);
        } else {
          return encryptedKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder setEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey value) {
        if (encryptedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.set(index, value);
          onChanged();
        } else {
          encryptedKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder setEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder builderForValue) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          encryptedKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder addEncryptedKeys(com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey value) {
        if (encryptedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(value);
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder addEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey value) {
        if (encryptedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(index, value);
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder addEncryptedKeys(
          com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder builderForValue) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(builderForValue.build());
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder addEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder builderForValue) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder addAllEncryptedKeys(
          java.lang.Iterable<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> values) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, encryptedKeys_);
          onChanged();
        } else {
          encryptedKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder clearEncryptedKeys() {
        if (encryptedKeysBuilder_ == null) {
          encryptedKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          encryptedKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public Builder removeEncryptedKeys(int index) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.remove(index);
          onChanged();
        } else {
          encryptedKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder getEncryptedKeysBuilder(
          int index) {
        return getEncryptedKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder getEncryptedKeysOrBuilder(
          int index) {
        if (encryptedKeysBuilder_ == null) {
          return encryptedKeys_.get(index);  } else {
          return encryptedKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public java.util.List<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
           getEncryptedKeysOrBuilderList() {
        if (encryptedKeysBuilder_ != null) {
          return encryptedKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encryptedKeys_);
        }
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder addEncryptedKeysBuilder() {
        return getEncryptedKeysFieldBuilder().addBuilder(
            com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.getDefaultInstance());
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder addEncryptedKeysBuilder(
          int index) {
        return getEncryptedKeysFieldBuilder().addBuilder(
            index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.getDefaultInstance());
      }
      /**
       * <pre>
       * List of encrypted asymmetric keys to be decrypted, encrypted with client new passwordKey
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 1;</code>
       */
      public java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder> 
           getEncryptedKeysBuilderList() {
        return getEncryptedKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
          getEncryptedKeysFieldBuilder() {
        if (encryptedKeysBuilder_ == null) {
          encryptedKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder>(
                  encryptedKeys_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          encryptedKeys_ = null;
        }
        return encryptedKeysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.GetUserPrivateKeysResp)
    }

    // @@protoc_insertion_point(class_scope:proto.GetUserPrivateKeysResp)
    private static final com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp();
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetUserPrivateKeysResp>
        PARSER = new com.google.protobuf.AbstractParser<GetUserPrivateKeysResp>() {
      @java.lang.Override
      public GetUserPrivateKeysResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetUserPrivateKeysResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetUserPrivateKeysResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetUserPrivateKeysResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.Encryption.GetUserPrivateKeysResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SetUserKdfMetadataReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.SetUserKdfMetadataReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * new kdfMeta data
     * </pre>
     *
     * <code>string kdfMeta = 1;</code>
     * @return The kdfMeta.
     */
    java.lang.String getKdfMeta();
    /**
     * <pre>
     * new kdfMeta data
     * </pre>
     *
     * <code>string kdfMeta = 1;</code>
     * @return The bytes for kdfMeta.
     */
    com.google.protobuf.ByteString
        getKdfMetaBytes();

    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> 
        getEncryptedKeysList();
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getEncryptedKeys(int index);
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    int getEncryptedKeysCount();
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    java.util.List<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
        getEncryptedKeysOrBuilderList();
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder getEncryptedKeysOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code proto.SetUserKdfMetadataReq}
   */
  public  static final class SetUserKdfMetadataReq extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.SetUserKdfMetadataReq)
      SetUserKdfMetadataReqOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SetUserKdfMetadataReq.newBuilder() to construct.
    private SetUserKdfMetadataReq(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SetUserKdfMetadataReq() {
      kdfMeta_ = "";
      encryptedKeys_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SetUserKdfMetadataReq();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SetUserKdfMetadataReq(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              kdfMeta_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                encryptedKeys_ = new java.util.ArrayList<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey>();
                mutable_bitField0_ |= 0x00000001;
              }
              encryptedKeys_.add(
                  input.readMessage(com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          encryptedKeys_ = java.util.Collections.unmodifiableList(encryptedKeys_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataReq_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.class, com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.Builder.class);
    }

    public static final int KDFMETA_FIELD_NUMBER = 1;
    private volatile java.lang.Object kdfMeta_;
    /**
     * <pre>
     * new kdfMeta data
     * </pre>
     *
     * <code>string kdfMeta = 1;</code>
     * @return The kdfMeta.
     */
    public java.lang.String getKdfMeta() {
      java.lang.Object ref = kdfMeta_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        kdfMeta_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * new kdfMeta data
     * </pre>
     *
     * <code>string kdfMeta = 1;</code>
     * @return The bytes for kdfMeta.
     */
    public com.google.protobuf.ByteString
        getKdfMetaBytes() {
      java.lang.Object ref = kdfMeta_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kdfMeta_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENCRYPTEDKEYS_FIELD_NUMBER = 2;
    private java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> encryptedKeys_;
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    public java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> getEncryptedKeysList() {
      return encryptedKeys_;
    }
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    public java.util.List<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
        getEncryptedKeysOrBuilderList() {
      return encryptedKeys_;
    }
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    public int getEncryptedKeysCount() {
      return encryptedKeys_.size();
    }
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getEncryptedKeys(int index) {
      return encryptedKeys_.get(index);
    }
    /**
     * <pre>
     * List of re-encrypted asymmetric keys with the new passwordKey,
     * </pre>
     *
     * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
     */
    public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder getEncryptedKeysOrBuilder(
        int index) {
      return encryptedKeys_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getKdfMetaBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, kdfMeta_);
      }
      for (int i = 0; i < encryptedKeys_.size(); i++) {
        output.writeMessage(2, encryptedKeys_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getKdfMetaBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, kdfMeta_);
      }
      for (int i = 0; i < encryptedKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, encryptedKeys_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq other = (com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq) obj;

      if (!getKdfMeta()
          .equals(other.getKdfMeta())) return false;
      if (!getEncryptedKeysList()
          .equals(other.getEncryptedKeysList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KDFMETA_FIELD_NUMBER;
      hash = (53 * hash) + getKdfMeta().hashCode();
      if (getEncryptedKeysCount() > 0) {
        hash = (37 * hash) + ENCRYPTEDKEYS_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptedKeysList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.SetUserKdfMetadataReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.SetUserKdfMetadataReq)
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataReq_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.class, com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEncryptedKeysFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        kdfMeta_ = "";

        if (encryptedKeysBuilder_ == null) {
          encryptedKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          encryptedKeysBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataReq_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq build() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq result = new com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq(this);
        int from_bitField0_ = bitField0_;
        result.kdfMeta_ = kdfMeta_;
        if (encryptedKeysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            encryptedKeys_ = java.util.Collections.unmodifiableList(encryptedKeys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.encryptedKeys_ = encryptedKeys_;
        } else {
          result.encryptedKeys_ = encryptedKeysBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq.getDefaultInstance()) return this;
        if (!other.getKdfMeta().isEmpty()) {
          kdfMeta_ = other.kdfMeta_;
          onChanged();
        }
        if (encryptedKeysBuilder_ == null) {
          if (!other.encryptedKeys_.isEmpty()) {
            if (encryptedKeys_.isEmpty()) {
              encryptedKeys_ = other.encryptedKeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEncryptedKeysIsMutable();
              encryptedKeys_.addAll(other.encryptedKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.encryptedKeys_.isEmpty()) {
            if (encryptedKeysBuilder_.isEmpty()) {
              encryptedKeysBuilder_.dispose();
              encryptedKeysBuilder_ = null;
              encryptedKeys_ = other.encryptedKeys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              encryptedKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEncryptedKeysFieldBuilder() : null;
            } else {
              encryptedKeysBuilder_.addAllMessages(other.encryptedKeys_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object kdfMeta_ = "";
      /**
       * <pre>
       * new kdfMeta data
       * </pre>
       *
       * <code>string kdfMeta = 1;</code>
       * @return The kdfMeta.
       */
      public java.lang.String getKdfMeta() {
        java.lang.Object ref = kdfMeta_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          kdfMeta_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * new kdfMeta data
       * </pre>
       *
       * <code>string kdfMeta = 1;</code>
       * @return The bytes for kdfMeta.
       */
      public com.google.protobuf.ByteString
          getKdfMetaBytes() {
        java.lang.Object ref = kdfMeta_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kdfMeta_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * new kdfMeta data
       * </pre>
       *
       * <code>string kdfMeta = 1;</code>
       * @param value The kdfMeta to set.
       * @return This builder for chaining.
       */
      public Builder setKdfMeta(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        kdfMeta_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * new kdfMeta data
       * </pre>
       *
       * <code>string kdfMeta = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKdfMeta() {
        
        kdfMeta_ = getDefaultInstance().getKdfMeta();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * new kdfMeta data
       * </pre>
       *
       * <code>string kdfMeta = 1;</code>
       * @param value The bytes for kdfMeta to set.
       * @return This builder for chaining.
       */
      public Builder setKdfMetaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        kdfMeta_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> encryptedKeys_ =
        java.util.Collections.emptyList();
      private void ensureEncryptedKeysIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          encryptedKeys_ = new java.util.ArrayList<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey>(encryptedKeys_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> encryptedKeysBuilder_;

      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> getEncryptedKeysList() {
        if (encryptedKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encryptedKeys_);
        } else {
          return encryptedKeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public int getEncryptedKeysCount() {
        if (encryptedKeysBuilder_ == null) {
          return encryptedKeys_.size();
        } else {
          return encryptedKeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey getEncryptedKeys(int index) {
        if (encryptedKeysBuilder_ == null) {
          return encryptedKeys_.get(index);
        } else {
          return encryptedKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder setEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey value) {
        if (encryptedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.set(index, value);
          onChanged();
        } else {
          encryptedKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder setEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder builderForValue) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          encryptedKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder addEncryptedKeys(com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey value) {
        if (encryptedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(value);
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder addEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey value) {
        if (encryptedKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(index, value);
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder addEncryptedKeys(
          com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder builderForValue) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(builderForValue.build());
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder addEncryptedKeys(
          int index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder builderForValue) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          encryptedKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder addAllEncryptedKeys(
          java.lang.Iterable<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey> values) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, encryptedKeys_);
          onChanged();
        } else {
          encryptedKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder clearEncryptedKeys() {
        if (encryptedKeysBuilder_ == null) {
          encryptedKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          encryptedKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public Builder removeEncryptedKeys(int index) {
        if (encryptedKeysBuilder_ == null) {
          ensureEncryptedKeysIsMutable();
          encryptedKeys_.remove(index);
          onChanged();
        } else {
          encryptedKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder getEncryptedKeysBuilder(
          int index) {
        return getEncryptedKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder getEncryptedKeysOrBuilder(
          int index) {
        if (encryptedKeysBuilder_ == null) {
          return encryptedKeys_.get(index);  } else {
          return encryptedKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public java.util.List<? extends com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
           getEncryptedKeysOrBuilderList() {
        if (encryptedKeysBuilder_ != null) {
          return encryptedKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encryptedKeys_);
        }
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder addEncryptedKeysBuilder() {
        return getEncryptedKeysFieldBuilder().addBuilder(
            com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.getDefaultInstance());
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder addEncryptedKeysBuilder(
          int index) {
        return getEncryptedKeysFieldBuilder().addBuilder(
            index, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.getDefaultInstance());
      }
      /**
       * <pre>
       * List of re-encrypted asymmetric keys with the new passwordKey,
       * </pre>
       *
       * <code>repeated .proto.EncryptedKey encryptedKeys = 2;</code>
       */
      public java.util.List<com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder> 
           getEncryptedKeysBuilderList() {
        return getEncryptedKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder> 
          getEncryptedKeysFieldBuilder() {
        if (encryptedKeysBuilder_ == null) {
          encryptedKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKey.Builder, com.strongsalt.strongdoc.sdk.proto.Encryption.EncryptedKeyOrBuilder>(
                  encryptedKeys_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          encryptedKeys_ = null;
        }
        return encryptedKeysBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.SetUserKdfMetadataReq)
    }

    // @@protoc_insertion_point(class_scope:proto.SetUserKdfMetadataReq)
    private static final com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq();
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetUserKdfMetadataReq>
        PARSER = new com.google.protobuf.AbstractParser<SetUserKdfMetadataReq>() {
      @java.lang.Override
      public SetUserKdfMetadataReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetUserKdfMetadataReq(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SetUserKdfMetadataReq> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetUserKdfMetadataReq> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SetUserKdfMetadataRespOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.SetUserKdfMetadataResp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Whether or not the operation was successful
     * </pre>
     *
     * <code>bool success = 1;</code>
     * @return The success.
     */
    boolean getSuccess();

    /**
     * <pre>
     * Whether or not the operation needs restart
     * </pre>
     *
     * <code>bool restart = 2;</code>
     * @return The restart.
     */
    boolean getRestart();

    /**
     * <pre>
     * The keyID of the new passwordKey
     * </pre>
     *
     * <code>string keyID = 3;</code>
     * @return The keyID.
     */
    java.lang.String getKeyID();
    /**
     * <pre>
     * The keyID of the new passwordKey
     * </pre>
     *
     * <code>string keyID = 3;</code>
     * @return The bytes for keyID.
     */
    com.google.protobuf.ByteString
        getKeyIDBytes();
  }
  /**
   * Protobuf type {@code proto.SetUserKdfMetadataResp}
   */
  public  static final class SetUserKdfMetadataResp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:proto.SetUserKdfMetadataResp)
      SetUserKdfMetadataRespOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SetUserKdfMetadataResp.newBuilder() to construct.
    private SetUserKdfMetadataResp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SetUserKdfMetadataResp() {
      keyID_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SetUserKdfMetadataResp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SetUserKdfMetadataResp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              success_ = input.readBool();
              break;
            }
            case 16: {

              restart_ = input.readBool();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              keyID_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataResp_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataResp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.class, com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.Builder.class);
    }

    public static final int SUCCESS_FIELD_NUMBER = 1;
    private boolean success_;
    /**
     * <pre>
     * Whether or not the operation was successful
     * </pre>
     *
     * <code>bool success = 1;</code>
     * @return The success.
     */
    public boolean getSuccess() {
      return success_;
    }

    public static final int RESTART_FIELD_NUMBER = 2;
    private boolean restart_;
    /**
     * <pre>
     * Whether or not the operation needs restart
     * </pre>
     *
     * <code>bool restart = 2;</code>
     * @return The restart.
     */
    public boolean getRestart() {
      return restart_;
    }

    public static final int KEYID_FIELD_NUMBER = 3;
    private volatile java.lang.Object keyID_;
    /**
     * <pre>
     * The keyID of the new passwordKey
     * </pre>
     *
     * <code>string keyID = 3;</code>
     * @return The keyID.
     */
    public java.lang.String getKeyID() {
      java.lang.Object ref = keyID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyID_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The keyID of the new passwordKey
     * </pre>
     *
     * <code>string keyID = 3;</code>
     * @return The bytes for keyID.
     */
    public com.google.protobuf.ByteString
        getKeyIDBytes() {
      java.lang.Object ref = keyID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (success_ != false) {
        output.writeBool(1, success_);
      }
      if (restart_ != false) {
        output.writeBool(2, restart_);
      }
      if (!getKeyIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, keyID_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (success_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, success_);
      }
      if (restart_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, restart_);
      }
      if (!getKeyIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, keyID_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp)) {
        return super.equals(obj);
      }
      com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp other = (com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp) obj;

      if (getSuccess()
          != other.getSuccess()) return false;
      if (getRestart()
          != other.getRestart()) return false;
      if (!getKeyID()
          .equals(other.getKeyID())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SUCCESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSuccess());
      hash = (37 * hash) + RESTART_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRestart());
      hash = (37 * hash) + KEYID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyID().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.SetUserKdfMetadataResp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.SetUserKdfMetadataResp)
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataRespOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataResp_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataResp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.class, com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.Builder.class);
      }

      // Construct using com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        success_ = false;

        restart_ = false;

        keyID_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.internal_static_proto_SetUserKdfMetadataResp_descriptor;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp getDefaultInstanceForType() {
        return com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.getDefaultInstance();
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp build() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp buildPartial() {
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp result = new com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp(this);
        result.success_ = success_;
        result.restart_ = restart_;
        result.keyID_ = keyID_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp) {
          return mergeFrom((com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp other) {
        if (other == com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp.getDefaultInstance()) return this;
        if (other.getSuccess() != false) {
          setSuccess(other.getSuccess());
        }
        if (other.getRestart() != false) {
          setRestart(other.getRestart());
        }
        if (!other.getKeyID().isEmpty()) {
          keyID_ = other.keyID_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private boolean success_ ;
      /**
       * <pre>
       * Whether or not the operation was successful
       * </pre>
       *
       * <code>bool success = 1;</code>
       * @return The success.
       */
      public boolean getSuccess() {
        return success_;
      }
      /**
       * <pre>
       * Whether or not the operation was successful
       * </pre>
       *
       * <code>bool success = 1;</code>
       * @param value The success to set.
       * @return This builder for chaining.
       */
      public Builder setSuccess(boolean value) {
        
        success_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether or not the operation was successful
       * </pre>
       *
       * <code>bool success = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuccess() {
        
        success_ = false;
        onChanged();
        return this;
      }

      private boolean restart_ ;
      /**
       * <pre>
       * Whether or not the operation needs restart
       * </pre>
       *
       * <code>bool restart = 2;</code>
       * @return The restart.
       */
      public boolean getRestart() {
        return restart_;
      }
      /**
       * <pre>
       * Whether or not the operation needs restart
       * </pre>
       *
       * <code>bool restart = 2;</code>
       * @param value The restart to set.
       * @return This builder for chaining.
       */
      public Builder setRestart(boolean value) {
        
        restart_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether or not the operation needs restart
       * </pre>
       *
       * <code>bool restart = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestart() {
        
        restart_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object keyID_ = "";
      /**
       * <pre>
       * The keyID of the new passwordKey
       * </pre>
       *
       * <code>string keyID = 3;</code>
       * @return The keyID.
       */
      public java.lang.String getKeyID() {
        java.lang.Object ref = keyID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The keyID of the new passwordKey
       * </pre>
       *
       * <code>string keyID = 3;</code>
       * @return The bytes for keyID.
       */
      public com.google.protobuf.ByteString
          getKeyIDBytes() {
        java.lang.Object ref = keyID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The keyID of the new passwordKey
       * </pre>
       *
       * <code>string keyID = 3;</code>
       * @param value The keyID to set.
       * @return This builder for chaining.
       */
      public Builder setKeyID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyID_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The keyID of the new passwordKey
       * </pre>
       *
       * <code>string keyID = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyID() {
        
        keyID_ = getDefaultInstance().getKeyID();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The keyID of the new passwordKey
       * </pre>
       *
       * <code>string keyID = 3;</code>
       * @param value The bytes for keyID to set.
       * @return This builder for chaining.
       */
      public Builder setKeyIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyID_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:proto.SetUserKdfMetadataResp)
    }

    // @@protoc_insertion_point(class_scope:proto.SetUserKdfMetadataResp)
    private static final com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp();
    }

    public static com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetUserKdfMetadataResp>
        PARSER = new com.google.protobuf.AbstractParser<SetUserKdfMetadataResp>() {
      @java.lang.Override
      public SetUserKdfMetadataResp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetUserKdfMetadataResp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SetUserKdfMetadataResp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetUserKdfMetadataResp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.strongsalt.strongdoc.sdk.proto.Encryption.SetUserKdfMetadataResp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_Key_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_Key_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_EncryptedKey_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_EncryptedKey_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_GetUserPrivateKeysReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_GetUserPrivateKeysReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_GetUserPrivateKeysResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_GetUserPrivateKeysResp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SetUserKdfMetadataReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_SetUserKdfMetadataReq_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_SetUserKdfMetadataResp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_proto_SetUserKdfMetadataResp_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020encryption.proto\022\005proto\032,protoc-gen-sw" +
      "agger/options/annotations.proto\"X\n\003Key\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005keyID\030\002 \001(\t\022\017\n\007ownerID\030\003 " +
      "\001(\t\022$\n\townerType\030\004 \001(\0162\021.proto.AccessTyp" +
      "e\"\247\001\n\014EncryptedKey\022\016\n\006encKey\030\001 \001(\t\022\023\n\013en" +
      "cryptorID\030\002 \001(\t\022\030\n\020encryptorVersion\030\003 \001(" +
      "\005\022\r\n\005keyID\030\004 \001(\t\022\022\n\nkeyVersion\030\005 \001(\005\022\017\n\007" +
      "ownerID\030\006 \001(\t\022$\n\townerType\030\007 \001(\0162\021.proto" +
      ".AccessType\";\n\025GetUserPrivateKeysReq:\"\222A" +
      "\037\n\027*\025GetUserPrivateKeysReq2\004\022\002{}\"\317\001\n\026Get" +
      "UserPrivateKeysResp\022*\n\rencryptedKeys\030\001 \003" +
      "(\0132\023.proto.EncryptedKey:\210\001\222A\204\001\n\030*\026GetUse" +
      "rPrivateKeysResp2h\022f{\"encryptedKeys\": [{" +
      "\"encKey\": \"asdf\", \"encryptorID\": \"abc123" +
      "\", \"ownerID\": \"person\", \"keyID\": \"asdf\"}" +
      "]}\"\372\001\n\025SetUserKdfMetadataReq\022\017\n\007kdfMeta\030" +
      "\001 \001(\t\022*\n\rencryptedKeys\030\002 \003(\0132\023.proto.Enc" +
      "ryptedKey:\243\001\222A\237\001\n\027*\025SetUserKdfMetadataRe" +
      "q2\203\001\022\200\001{\"kdfMeta\": \"kdfMetadata\", \"encry" +
      "ptedKeys\": [{\"encKey\": \"asdf\", \"encrypto" +
      "rID\": \"abc123\", \"ownerID\": \"person\", \"ke" +
      "yID\": \"asdf\"}]}\"\242\001\n\026SetUserKdfMetadataRe" +
      "sp\022\017\n\007success\030\001 \001(\010\022\017\n\007restart\030\002 \001(\010\022\r\n\005" +
      "keyID\030\003 \001(\t:W\222AT\n\030*\026SetUserKdfMetadataRe" +
      "sp28\0226{\"success\": true, \"restart\": false" +
      ", \"keyID\": \"abc123\"}*7\n\nAccessType\022\007\n\003OR" +
      "G\020\000\022\010\n\004USER\020\001\022\t\n\005GROUP\020\002\022\013\n\007UNKNOWN\020\023B3\n" +
      "\"com.strongsalt.strongdoc.sdk.protoB\nEnc" +
      "ryption\210\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor(),
        });
    internal_static_proto_Key_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_Key_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_Key_descriptor,
        new java.lang.String[] { "Key", "KeyID", "OwnerID", "OwnerType", });
    internal_static_proto_EncryptedKey_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_EncryptedKey_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_EncryptedKey_descriptor,
        new java.lang.String[] { "EncKey", "EncryptorID", "EncryptorVersion", "KeyID", "KeyVersion", "OwnerID", "OwnerType", });
    internal_static_proto_GetUserPrivateKeysReq_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_GetUserPrivateKeysReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_GetUserPrivateKeysReq_descriptor,
        new java.lang.String[] { });
    internal_static_proto_GetUserPrivateKeysResp_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_GetUserPrivateKeysResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_GetUserPrivateKeysResp_descriptor,
        new java.lang.String[] { "EncryptedKeys", });
    internal_static_proto_SetUserKdfMetadataReq_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_SetUserKdfMetadataReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_SetUserKdfMetadataReq_descriptor,
        new java.lang.String[] { "KdfMeta", "EncryptedKeys", });
    internal_static_proto_SetUserKdfMetadataResp_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_proto_SetUserKdfMetadataResp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_proto_SetUserKdfMetadataResp_descriptor,
        new java.lang.String[] { "Success", "Restart", "KeyID", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(grpc.gateway.protoc_gen_swagger.options.Annotations.openapiv2Schema);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    grpc.gateway.protoc_gen_swagger.options.Annotations.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
